doctype 5
html
	head
		title
			| asschattr
			= ': #' + hashtag

		meta(charset='utf-8')
		meta(name='viewport',content='width=device-width, initial-scale=1, user-scalable=no')

		link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css')
		link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap-responsive.min.css')

		style .
			body {
				letter-spacing: -0.01em;
				text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.1);
			}

			form {
				margin: 0;
			}

			article {
				max-height: 1000em;
				display: block;
				padding: 1ex;
				border-bottom: 1px solid #ddd;
				transition: all 200ms ease;
				-moz-transition: all 200ms ease;
				-webkit-transition: all 200ms ease;
				-o-transition: all 200ms ease;
				-ms-transition: all 200ms ease;
				background-color: white;
				overflow: hidden;
				line-height: 0.9em;

				/* Defaults keep new entries hidden. They must be animated into view */
				height: 0px;
				opacity: 0;
				visibility: hidden;
			}

			article:last-child {
				border-bottom: none;
			}

			time {
				font-style: italic;
				color: silver;
				text-shadow: none;
			}

			.author {
				font-weight: 600;
			}

			#chat-log {
				margin-top: 1ex;
			}

			footer {
				border-top: 1px solid rgb(229, 229, 229);
				background-color: rgb(245, 245, 245);
				padding: 1ex;
				margin-top: 1em;
				text-align: center;
			}

	body
		div(class='navbar navbar-static-top')
			div(class='navbar-inner')
				div(class='container')
					ul(class='nav')
						li(class='dropdown')
							a(id='menu',class='brand dropdown-toggle',data-toggle='dropdown',data-target='#',href='/') asschattr <b class='caret'></b>
							ul(class='dropdown-menu',role='menu')
								li
									a(href='/') home
									a(href='/fuq') frequently unasked questions (fuq)
								li(class='divider')
								li
									a(href='#',id='clear-entries') clear chat log
					form(id='chat',class='navbar-form')
						input(class='input-xxlarge',type='text',name='entry',placeholder='type your chat message here, & press enter to send',autocomplete='off',autofocus='autofocus')
						button(class='btn',type='submit') ♥

		main(id='chat-log',class='container')

		footer(class='footer')
			div(class='container')
				p .
					<strong>asschattr</strong> lets you be an asshole on the Internet, without having to be an asshole in real life. Connect with other assholes and together, find meaning in the world.
				img(src='/images/puppy-and-kitten.png',height='250',width='350',alt='puppy & kitten')
				p .
					Designed & built with ♥ in New Mexico, the <a href="http://www.kob.com/article/stories/s3077298.shtml">worst place to be a child</a>.
				p .
					Follow us on
					<a href="https://www.twitter.com/asschattr">Twitter</a>
					or like us on
					<a href="https://www.facebook.com/asschattr">Facebook</a>
					.
				p .
					Source code coming soon…
				p .
					© <a href="http://blog.samat.org/">Samat K Jain</a>

		script(src='//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/js/bootstrap.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.1.0/moment.min.js')
		script .
			var hashtag = '!{hashtag}';
			var socket = io.connect();
			socket.on('incoming', function(data) {
				console.log('incoming: ' + data.msg);
				var $new_entry = $('<article><span class="author">' + data.screenname + ' • </span> ' + data.msg + ' <time datetime=' + data.date + '>a few seconds ago</time></article>');

				appendNewMessage($new_entry);
			});

			function appendNewMessage($new_entry) {
				// Cache selector locally
				if (typeof appendNewMessage.$chat_log == 'undefined')
					appendNewMessage.$chat_log = $('#chat-log');
				$chat_log = appendNewMessage.$chat_log;

				// Add new entry (default CSS will make this hidden)
				$new_entry.prependTo($chat_log);

				// Hack for being unable to transition to height: auto
				var $clone = $new_entry.clone();
				$clone.css({'position': 'relative',
										'visibility': 'hidden',
										'height': 'auto'})
							.appendTo($chat_log);
				var height = $clone.height();
				$clone.remove();

				// Make entry visible…
				$new_entry.css({'visibility': 'visible',
												'height': height + 'px',
												'opacity': 1});
			}

			$('#chat').on('submit', function(ev) {
				ev.preventDefault();

				var msg = $('input[name=entry]').val()
				if (!msg) return;
				var now = moment().toJSON();
				console.log('sending msg to server: ' + msg);
				window.socket.emit('msg', {'date': now, msg: msg, screenname: window.screenname});
				$('input[name=entry]').val('');
			});

			$(document).ready(function() {
				var $welcome_msg = $('<article>Welcome to <strong>asschattr</strong>. If people are around, you can listen in and wait for messages to appear—or just start typing and send one yourself!</article>');
				appendNewMessage($welcome_msg);

				var screenname = generateScreenName();
				window.screenname = screenname;

				console.log(screenname);

				// This should only happen on connection to server
				appendNewMessage($('<article>You are now connected to chatroom <strong>#' + hashtag + '</strong> as <strong>' + screenname + '</strong>. Have a nice day!</article>'));
			});

			// Make sure events already displayed (which are fixed-height since they
			// were animated) stay visible
			$(window).on('resize orientationchange', function() {
				$('article').css({'height': 'auto'});
			});

			// Clear chat log
			$('#clear-entries').on('click', function(ev) {
				ev.preventDefault();

				$('article').css({'height': 0, 'opacity': 0})
				.on('transitionend', function() {
					$('#chat-log').empty();
				});
			});

			// Update times
			// Hack for now… no need to be doing this many updates
			function updateTimes() {
				$('time').each(function() {
					var $e = $(this);
					var time_text = moment($e.attr('datetime')).fromNow();
					var current_time_text = $e.text();

					// Avoid updating DOM if unnecessary
					if (current_time_text != time_text)
						$e.text(time_text);
				});
			}
			setInterval(updateTimes, 60000);

			// This should probably be server side…
			function generateScreenName() {
				var name;
				var color = ["white", "black", "yellow", "red", "blue", "green", "purple", "orange", "silver", "scarlet", "rainbow", "indigo", "ivory", "navy", "pink", "gold", "golden"];
				var nick_adjective = ["alpha", "angry", "bad", "barbaric", "bare", "bitter", "sweet", "brave", "brutal", "crisp", "crunchy", "dancing", "dangerous", "dirty", "dreaded", "elastic", "endless", "dreaded", "eternal", "flaming", "flying", "forgotten", "forsaken", "freaky", "frozen", "furious", "grim", "gruesome", "gutsy", "cruel", "desire", "heavy", "helpless", "hidden", "homeless", "hungry", "insane", "intense", "itchy", "left-handed", "lefty", "liquid", "lone", "lost", "massive", "meaty", "mellow", "modern", "morbid", "moving", "nasty", "needless", "nervous", "old", "pointless", "pure", "rare", "raw", "reborn", "rusty", "richy", "risky", "rocking", "rocky", "rolling", "rough", "running", "runny", "rusty", "ruthless", "sad", "screaming", "serious", "screamy", "seriously", "silly", "skilled", "sleepy", "slidy", "small", "solid", "steamy", "stony", "stormy", "strange", "stray", "streaming", "strong", "supersonic", "tainted", "tidy", "tough", "sunny", "unique", "vicious", "vital", "wild", "wooden", "worthy", "young", "hearty", "bad", "beauty", "boiling", "brave", "chicken", "color", "cool", "crazy", "cute", "cute", "cute", "cutie", "smokey", "disco", "drunken", "drunken", "dusty", "eager", "fast", "fast", "fatty", "flower", "grotesque", "heavy", "hilarious", "honey", "hot", "hungry", "icy", "little", "lone", "lonesome", "fisty", "foxy", "loose", "lucky", "maximum", "minimum", "mysterious", "rapid", "rebel", "rotten", "shining", "skinny", "sleepy", "mini", "maxi", "misty", "slimy", "small", "solid", "stormy", "strong", "stupid", "sunny", "sweet", "sweety", "swift", "sugar", "doggy", "spacy", "stoned", "stony", "tasty", "thirsty", "tiny", "ugly", "warm", "willy", "beau", "honey", "beauty", "chaos", "circus", "cult", "pet"];
				var nick_animal = ["alligator", "angel", "antelope", "ape", "armadillo", "baboon", "baby", "baby", "baron", "basilisk", "bat", "bear", "bear", "beaver", "bella", "bird", "birdie", "bison", "boar", "boy", "buffalo", "bull", "bunny", "bunny", "butterfly", "camel", "canary", "cat", "cat", "chameleon", "cheetah", "chick", "child", "chimpanzee", "chinchilla", "chipmunk", "cobra", "cockroach", "colt", "cougar", "cow", "coyote", "crocodile", "crow", "cub", "darling", "deer", "dingo", "doe", "doe", "dog", "dog", "dog", "doggy", "doll", "donkey", "dormouse", "dromedary", "duck", "duckbill", "duckie", "duckling", "dugong", "eagle", "eaglet", "elephant", "elf", "fairy", "farrow", "filly", "finch", "fish", "flapper", "flipper", "foal", "fox", "fox", "frog", "froglet", "gazelle", "giraffe", "girl", "gnu", "goat", "gorilla", "grizzly", "guinea", "hamster", "hare", "hatchling", "hawk", "hippopotamus", "hog", "honey", "honey", "horse", "hyena", "ibis", "impala", "infant", "iris", "jackal", "jaguar", "joey", "kangaroo", "kid", "kid", "kiddie", "king", "kit", "kitten", "kitten", "koala", "lama", "lamb", "lamb", "larva", "lemur", "leopard", "lion", "lion", "lizard", "llama", "lovebird", "lynx", "man", "mandrill", "mare", "mink", "mole", "monkey", "moose", "moose", "moose", "mouse", "mouse", "mule", "musk-ox", "mustang", "nymph", "ocelot", "opossum", "orangutan", "otter", "ox", "panda", "panther", "panther", "parakeet", "parrot", "pet", "pig", "pig", "piglet", "pink", "pinkie", "polar-bear", "pony", "prince", "puglet", "puma", "pup", "puppy", "puppy", "python", "queen", "rabbit", "rabbit", "raccoon", "rat", "rat", "reindeer", "reptile", "rhino", "salamander", "seal", "serpent", "sheep", "skunk", "snake", "snake", "sparrow", "spider", "spider", "springbok", "squirrel", "stallion", "sugar", "swallow", "swan", "sweety", "tapir", "tiger", "tiger", "toad", "toddler", "tumbler", "turtle", "viper", "walrus", "waterbuck", "weasel", "whale", "whelp", "wildcat", "wolf", "wolverine", "wombat", "woodchuck", "wriggler", "yak", "zebra"];
				var nick_science = ["airmen", "beast", "believer", "bullet", "swush", "cadet", "dancer", "demon", "detective", "devil", "dolly", "dummy", "empire", "fever", "fiend", "fisherman", "freak", "gangster", "gazette", "genius", "gladiator", "goldfish", "goldbeast", "gravy", "hammer", "harmony", "invader", "jockey", "judge", "juggler", "king", "lady", "lord", "mutant", "phantom", "pilot", "pioneer", "pirate", "prisoner", "professor", "prophet", "ranger", "rebel", "romeo", "saint", "shadow", "sinner", "student", "titan", "trooper", "stud", "trustee", "villain", "volunteer", "warrior", "yodelers", "baroness", "beam", "breeze", "burst", "crystal", "emerald", "galaxy", "hammer", "hook", "hurricane", "iron", "knife", "laser", "moon", "moron", "rayz", "sapphire", "scissor", "space", "star", "steel", "storm", "sun"];

				var prefix = color.concat(nick_adjective);
				var n1 = parseInt(Math.random() * prefix.length);
				var n1ex = parseInt(Math.random() * prefix.length);
				if (n1ex == n1) {
					n1ex = n1 + 1;
				}
				var prename = prefix[n1];
				var prenameex = prefix[n1ex];

				var suffix = nick_animal.concat(nick_science);
				var n2 = parseInt(Math.random() * suffix.length);
				var sufname = suffix[n2];

				var n3 = parseInt(Math.random() * 100);
				if (n3 <= 30)
					name = [prename, sufname];
				else if (n3 > 30 && n3 <= 40)
					name = [prenameex, sufname];
				else if (n3 > 40 && n3 <= 65)
					name = [sufname, prenameex];
				else if (n3 > 65 && n3 <= 84)
					name = [prenameex, prename, sufname];
				else if (n3 > 84 && n3 <= 88)
					name = [sufname, sufname];
				else if (n3 > 88 && n3 <= 90)
					name = ["Los", sufname];
				else if (n3 > 90 && n3 <= 92)
					name = ["Der", sufname];
				else if (n3 > 92 && n3 <= 94)
					name = ["El", sufname];
				else
					name = ["The", sufname];

				return(name.join(' ')); 
			}

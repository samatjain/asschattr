doctype 5
html
	head
		title asschattr

		meta(charset='utf-8')
		meta(name='viewport',content='width=device-width, initial-scale=1, user-scalable=no')

		link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap.min.css')
		link(rel='stylesheet', href='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/css/bootstrap-responsive.min.css')

		style .
			body {
				letter-spacing: -0.01em;
			}

			form {
				margin: 0;
			}

			article {
				height: 0px;
				max-height: 1000em;
				opacity: 0;
				display: block;
				padding: 1ex;
				border-bottom: 1px solid #ddd;
				transition: all 200ms ease;
				-moz-transition: all 200ms ease;
				-webkit-transition: all 200ms ease;
				-o-transition: all 200ms ease;
				-ms-transition: all 200ms ease;
				background-color: white;
				overflow: hidden;
				line-height: 0.9em;
				visibility: hidden;
			}

			time {
				font-style: italic;
				color: silver;
			}

			#chat-log {
				margin-top: 1ex;
			}

			footer {
				border-top: 1px solid rgb(229, 229, 229);
				background-color: rgb(245, 245, 245);
				padding: 1ex;
				margin-top: 1em;
				text-align: center;
			}

	body
		div(class='navbar navbar-static-top')
			div(class='navbar-inner')
				div(class='container')
					ul(class='nav')
						li(class='dropdown')
							a(id='menu',class='brand dropdown-toggle',data-toggle='dropdown',data-target='#',href='http://asschattr.animevivo.com') asschattr <b class='caret'></b>
							ul(class='dropdown-menu',role='menu')
								li
									a(href='/') home
									a(href='/fuq') frequently unasked questions (fuq)
								li(class='divider')
								li
									a(href='#',id='clear-entries') clear chat log
					form(id='chat',class='navbar-form')
						input(class='input-xxlarge',type='text',name='entry',placeholder='type your chat message here, & press enter to send',autocomplete='off',autofocus='autofocus')
						button(class='btn',type='submit') ♥

		main(id='chat-log',class='container')

		footer(class='footer')
			div(class='container')
				p .
					<strong>asschattr</strong> lets you be an asshole on the Internet, without having to be an asshole in real life. Connect with other assholes and together, find meaning in the world.
				img(src='/images/puppy-and-kitten.png',height='250',width='350',alt='puppy & kitten')
				p .
					Designed & built with ♥ in New Mexico, the <a href="http://www.kob.com/article/stories/s3077298.shtml">worst place to be a child</a>.
				p .
					Created by
					<a href="https://twitter.com/SamatJain">@SamatJain</a>
					(<a href="https://identi.ca/samatjain">also on Pump.io</a>),
					Kenny Jacobs, and Antonio Arredondo. Thanks to an extremely supportive Felicia Frizzell.
				p .
					Source code coming soon…

		script(src='//cdnjs.cloudflare.com/ajax/libs/jquery/1.10.2/jquery.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/2.3.2/js/bootstrap.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/socket.io/0.9.16/socket.io.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.1.0/moment.min.js')
		script .
			var socket = io.connect();
			socket.on('incoming', function(data) {
				console.log('incoming: ' + data.msg);
				var $new_entry = $('<article>' + data.msg + ' <time datetime=' + data.date + '>just now</time></article>');

				// Hack for now; time only updated when new messages arrive
				$('time').each(function() {
					var $e = $(this);
					var time_text = $e.attr('datetime');
					time_text = moment(time_text).fromNow();
					$e.text(time_text);
				});

				appendNewMessage($new_entry);
			});

			function appendNewMessage($new_entry) {
				// Cache selector locally
				if (typeof appendNewMessage.$chat_log == 'undefined') {
					appendNewMessage.$chat_log = $('#chat-log');
				}
				$chat_log = appendNewMessage.$chat_log;

				// Add new entry (default CSS will make this hidden)
				$new_entry.prependTo($chat_log);

				// Hack for being unable to transition to height: auto
				var $clone = $new_entry.clone();
				$clone.css({'position': 'relative',
										'visibility': 'hidden',
										'height': 'auto'})
							.appendTo($chat_log);
				var height = $clone.height();
				$clone.remove();

				// Make entry visible…
				$new_entry.css({'visibility': 'visible',
												'height': height + 'px',
												'opacity': 1});
			}

			$('#chat').on('submit', function(ev) {
				ev.preventDefault();

				var msg = $('input[name=entry]').val()
				if (!msg) return;
				var now = moment().toJSON();
				console.log('sending msg to server: ' + msg);
				window.socket.emit('msg', {'date': now, msg: msg});
				$('input[name=entry]').val('');
			});

			$(document).ready(function() {
				var $welcome_msg = $('<article>Welcome to <strong>asschattr</strong>. If people are around, you can listen in and wait for messages to appear—or just start typing and send one yourself!</article>');
				appendNewMessage($welcome_msg);
			});

			// Make sure events already displayed (which are fixed-height since they
			// were animated) stay visible
			$(window).on('resize orientationchange', function() {
				$('article').css({'height': 'auto'});
			});

			// Clear chat log
			$('#clear-entries').on('click', function(ev) {
				ev.preventDefault();

				$('article').css({'height': 0, 'opacity': 0})
				.on('transitionend', function() {
					$('#chat-log').empty();
				});
			});
